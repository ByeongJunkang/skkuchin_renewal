server {
    listen 80;
    server_name *.skkuchin.com;
    client_max_body_size 500M;

    if ($http_x_forwarded_proto != 'https') {
        return 301 https://$host$request_uri;
    }

    location /api/ {
        proxy_pass http://localhost:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /ws/chat/ {
        proxy_pass http://localhost:8080;
        # WebSocket support
        # 1. HTTP/1.1 버전에서 지원하는 프로토콜 전환 메커니즘을 사용한다
        proxy_http_version 1.1;

        # 2. hop-by-hop 헤더를 사용한다
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        # 3. 받는 대상 서버(WAS)
        proxy_set_header Host $host;
        add_header 'Access-Control-Allow-Origin' '*';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Accept-Encoding,Origin,User-Agent,DNT, Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,X-Csrftoken';
        add_header 'Access-Control-Allow-Methods' 'GET,DELETE,POST,OPTIONS,PATCH,PUT';
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
        add_header 'Access-Control-Allow-Credentials' 'true';
    }

    location / {
        proxy_pass http://localhost:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    server_tokens off;
    client_header_timeout 65;
    keepalive_timeout 65;
    keepalive_requests 100;
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log main;
}
